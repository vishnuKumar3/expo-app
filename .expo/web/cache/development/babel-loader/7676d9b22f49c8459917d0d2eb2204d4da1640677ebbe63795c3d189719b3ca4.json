{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { request, PERMISSIONS, RESULTS } from 'react-native-permissions';\nimport SmsRetriever from 'react-native-sms-retriever';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  useEffect(function () {\n    requestPermissions();\n  }, []);\n  var requestPermissions = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield request(PERMISSIONS.ANDROID.READ_SMS);\n      if (result === RESULTS.GRANTED) {\n        startSmsListener();\n      } else {}\n    });\n    return function requestPermissions() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var startSmsListener = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var registered = yield SmsRetriever.startSmsRetriever();\n        if (registered) {\n          SmsRetriever.addSmsListener(function (event) {\n            if (event.message) {\n              setMessage(event.message);\n            }\n          });\n        } else {}\n      } catch (error) {}\n    });\n    return function startSmsListener() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: message\n    }), _jsx(Button, {\n      title: \"Request Permissions\",\n      onPress: requestPermissions\n    })]\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","request","PERMISSIONS","RESULTS","SmsRetriever","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","message","setMessage","requestPermissions","_ref","_asyncToGenerator","result","ANDROID","READ_SMS","GRANTED","startSmsListener","apply","arguments","_ref2","registered","startSmsRetriever","addSmsListener","event","error","children","title","onPress"],"sources":["C:/Users/naray/Videos/expoReactNative/components/home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { request, PERMISSIONS, RESULTS } from 'react-native-permissions';\r\nimport SmsRetriever from 'react-native-sms-retriever';\r\n\r\nconst App = () => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    requestPermissions();\r\n  }, []);\r\n\r\n  const requestPermissions = async () => {\r\n    const result = await request(PERMISSIONS.ANDROID.READ_SMS);\r\n    \r\n    if (result === RESULTS.GRANTED) {\r\n      startSmsListener();\r\n    } else {\r\n      // Handle permission denied\r\n    }\r\n  };\r\n\r\n  const startSmsListener = async () => {\r\n    try {\r\n      const registered = await SmsRetriever.startSmsRetriever();\r\n      \r\n      if (registered) {\r\n        SmsRetriever.addSmsListener(event => {\r\n          if (event.message) {\r\n            // Handle the received message\r\n            setMessage(event.message);\r\n          }\r\n        });\r\n      } else {\r\n        // SMS retriever not registered\r\n      }\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>{message}</Text>\r\n      <Button title=\"Request Permissions\" onPress={requestPermissions} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnD,SAASC,OAAO,EAAEC,WAAW,EAAEC,OAAO,QAAQ,0BAA0B;AACxE,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAA8Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1Bf,SAAS,CAAC,YAAM;IACdmB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,kBAAkB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACrC,IAAMC,MAAM,SAASjB,OAAO,CAACC,WAAW,CAACiB,OAAO,CAACC,QAAQ,CAAC;MAE1D,IAAIF,MAAM,KAAKf,OAAO,CAACkB,OAAO,EAAE;QAC9BC,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM,CAEP;IACF,CAAC;IAAA,gBARKP,kBAAkBA,CAAA;MAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQvB;EAED,IAAMF,gBAAgB;IAAA,IAAAG,KAAA,GAAAR,iBAAA,CAAG,aAAY;MACnC,IAAI;QACF,IAAMS,UAAU,SAAStB,YAAY,CAACuB,iBAAiB,CAAC,CAAC;QAEzD,IAAID,UAAU,EAAE;UACdtB,YAAY,CAACwB,cAAc,CAAC,UAAAC,KAAK,EAAI;YACnC,IAAIA,KAAK,CAAChB,OAAO,EAAE;cAEjBC,UAAU,CAACe,KAAK,CAAChB,OAAO,CAAC;YAC3B;UACF,CAAC,CAAC;QACJ,CAAC,MAAM,CAEP;MACF,CAAC,CAAC,OAAOiB,KAAK,EAAE,CAEhB;IACF,CAAC;IAAA,gBAjBKR,gBAAgBA,CAAA;MAAA,OAAAG,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBrB;EAED,OACEhB,KAAA,CAACV,IAAI;IAAAiC,QAAA,GACHzB,IAAA,CAACP,IAAI;MAAAgC,QAAA,EAAElB;IAAO,CAAO,CAAC,EACtBP,IAAA,CAACN,MAAM;MAACgC,KAAK,EAAC,qBAAqB;MAACC,OAAO,EAAElB;IAAmB,CAAE,CAAC;EAAA,CAC/D,CAAC;AAEX,CAAC;AAED,eAAeN,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}